use crate :: scanner :: Process ; use crate :: config :: Config ; pub struct RuleMatch { pub rule_name : String , pub reason : String , } pub struct Detector { pub config : Config , } pub fn new_detector (config : Config) -> Detector { Detector { config : config , } } pub fn evaluate (detector : & Detector , process : & Process) -> bool { false } pub fn detect_infinite_loop (process : & Process) -> bool { process . cpu_percent > 90f64 && process . age_seconds > 300 } pub fn detect_hung_test (process : & Process) -> bool { false } fn main () { # [derive (Debug , Clone , PartialEq)] enum Priority { Critical , High , Low , } }